.row {
    // ======== randurii ========
    //daca are destul width atunci va folosi width specificat
    //daca nu are destul width foloseste 100% din spatiul disponibil
    max-width: $grid-width;
    // respond to diverse divice
    @include respond(tab-port) {
        max-width: 50rem;
        padding: 0 3rem;
    }

    margin: 0 auto; //centru block element in interiorul unui alt block element 
    

    &:not(:last-child){
        margin-bottom: $gutter-vertical;//lasa magini intre randuri dar nu si pentru ultimul rand
        // respond to diverse divice
        @include respond(tab-port) {
            margin-bottom:  $gutter-vertical-small;
        }
    }
    // ==============================================

    @include clearfix;


    // atribut selector
    [class^="col-"] {
        
        float: left;

        &:not(:last-child){
            margin-right: $gutter-horizontal;

            // respond to diverse divice
            @include respond(tab-port) {
                margin-right: 0;
                margin-bottom: $gutter-horizontal;
            }
        }

        // respond to diverse divice
        @include respond(tab-port) {
            width: 100% !important;
        }
    }

    //neste, coloane
    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal})/2);
        
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);

    }

    .col-2-of-3 {
        width: calc( 2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal} );

    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);

    }

    .col-2-of-4 {
        width: calc( 2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});

    }

    .col-3-of-4 {
        width: calc( 3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});

    }



}